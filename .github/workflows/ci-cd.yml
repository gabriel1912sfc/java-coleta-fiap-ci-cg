name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        run: |
          docker build -t coleta-app-image:${{ github.sha }} .

      - name: Push Docker image to Docker Hub (or Azure Container Registry)
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push coleta-app-image:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      # Deploy para o ambiente de Staging
      - name: Deploy to Staging
        run: |
          # Conectar no servidor de staging e realizar o deploy com Docker Compose
          ssh user@staging-server "docker pull coleta-app-image:${{ github.sha }} && docker-compose -f docker-compose.staging.yml up -d"

      # Deploy para o ambiente de Produção (trigger manual)
      - name: Deploy to Production (manual trigger)
        if: github.ref == 'refs/heads/main'
        run: |
          # Conectar no servidor de produção e realizar o deploy com Docker Compose
          ssh user@prod-server "docker pull coleta-app-image:${{ github.sha }} && docker-compose -f docker-compose.yml up -d"
